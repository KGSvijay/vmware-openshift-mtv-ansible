# Step 1: Convert User-Selected VM Names to List
- name: Convert user-selected VM names to list
  ansible.builtin.set_fact:
    user_selected_vm_list: "{{ user_selected_vm_names }}"

- name: Debug user_selected_vm_list
  ansible.builtin.debug:
    msg: "{{ user_selected_vm_list }}"

# Step 2: Fetch Detailed Information about VMs
- name: Fetch detailed information about VMs
  vmware.vmware_rest.vcenter_vm_info:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "{{ vcenter_username }}"
    vcenter_password: "{{ vcenter_password }}"
    vcenter_validate_certs: no
    names: "{{ user_selected_vm_list }}"
  delegate_to: localhost
  register: vm_details

- name: Debug vm_details
  ansible.builtin.debug:
    msg: "{{ vm_details }}"

# Step 3: Initialize lists for network_ids and datastore_ids
- name: Initialize lists for network_ids and datastore_ids
  ansible.builtin.set_fact:
    network_ids: []
    datastore_ids: []


- name: Fetch datastore information
  vmware.vmware_rest.vcenter_datastore_info:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "{{ vcenter_username }}"
    vcenter_password: "{{ vcenter_password }}"
    vcenter_validate_certs: no
  delegate_to: localhost
  register: datastore_info

- name: Collect datastore IDs from VM details
  set_fact:
    vm_datastore_ids: "{{ vm_details.value.datastore | map(attribute='datastore_id') | list }}"

- name: Find the datastore names used by the VM
  set_fact:
    vm_datastores: >-
      {{
        datastore_info.datastores
        | selectattr('datastore', 'defined')
        | selectattr('datastore_id', 'in', vm_datastore_ids)
        | map(attribute='name')
        | list
      }}

- name: Display datastore information for the VM
  debug:
    msg: "VM '{{ user_selected_vm_list }}' is using the following datastores: {{ vm_datastores | join(', ') }}"






